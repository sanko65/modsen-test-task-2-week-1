components:
  schemas:
    Meetup:
      type: object
      required: -meetup_id
        -name
        -description
      properties:
        meetup_id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          minLength: 5
          maxLength: 80
        description:
          type: string
          minLength: 5
          maxLength: 300
        keywords:
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 30
        time:
          type: string
          format: date-time
        place:
          type: string
          minLength: 5
          maxLength: 50
      example:
        meetup_id: 242342323
        name: Mobile App Development Workshop
        description: Learn about mobile app development strategies and tools from industry experts.
        keywords: ["Mobile app development", "iOS", "Android"]
        time: 2028-02-25T14:30:00.000Z
        place: AppSpace, 456 Oak St
    MeetupWithoutId:
      type: object
      required: -name
        -description
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 80
        description:
          type: string
          minLength: 5
          maxLength: 300
        keywords:
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 30
        time:
          type: string
          format: date-time
        place:
          type: string
          minLength: 5
          maxLength: 50
      example:
        name: Mobile App Development Workshop
        description: Learn about mobile app development strategies and tools from industry experts.
        keywords: ["Mobile app development", "iOS", "Android"]
        time: 2028-02-25T14:30:00.000Z
        place: AppSpace, 456 Oak St

/meetups:
  get:
    summary: Get meetups
    tags:
      - Meetups
    description: Retrieve a list of meetups based on provided filters and sorting parameters
    parameters:
      - in: query
        name: name
        schema:
          type: string
          minLength: 2
          maxLength: 80
        description: Filter by meetup name
      - in: query
        name: description
        schema:
          type: string
          minLength: 2
          maxLength: 300
        description: Filter by meetup description
      - in: query
        name: place
        schema:
          type: string
          minLength: 2
          maxLength: 50
        description: Filter by meetup place
      - in: query
        name: sort_by
        schema:
          type: string
        description:
          Field to sort by. Can be `meetup_id`, `name`, `description`, `keywords`, `time`, `place`.
          Multiple values can be passed to sort by multiple fields.
      - in: query
        name: order
        schema:
          type: string
          enum: [asc, desc]
        description:
          Sort order. Can be `asc` for ascending or `desc` for descending.
          Corresponding to the fields passed in `sort_by`.
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
        description: Maximum number of meetups to return
      - in: query
        name: offset
        schema:
          type: integer
          minimum: 0
        description: Number of meetups to skip before returning results
    responses:
      "200":
        description: A list of meetups
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Meetup"
      "204":
        description: No content
      "401":
        description: Unauthorized
      "500":
        description: Internal server error
  post:
    summary: Create a new meetup
    tags:
      - Meetups
    description: Create a new meetup with provided details
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MeetupWithoutId"
    responses:
      "201":
        description: Created meetup object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Meetup"
      "400":
        description: Meetup wasn't added
      "401":
        description: Unauthorized
      "403":
        description: You are not a moderator
      "500":
        description: Internal server error
  put:
    summary: Update a meetup
    tags:
      - Meetups
    description: Update a meetup with provided details
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Meetup"
    responses:
      "200":
        description: Meetup successfully updated
      "401":
        description: Unauthorized
      "403":
        description: You are not the creator of this meetup
      "404":
        description: No meetup with this id
      "500":
        description: Internal server error

/meetups/{id}:
  get:
    summary: Get meetup by id
    tags:
      - Meetups
    description: Retrieve a meetup by id
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
          minimum: 1
        required: true
        description: ID of meetup
    responses:
      "200":
        description: Meetup by id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Meetup"
      "204":
        description: No content
      "400":
        description: Invalid id
      "401":
        description: Unauthorized
      "500":
        description: Internal server error
  delete:
    summary: Delete a meetup
    tags:
      - Meetups
    description: Delete an existing meetup by ID
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
          minimum: 1
        required: true
        description: ID of the meetup to delete
    responses:
      "200":
        description: Meetup successfully deleted
      "401":
        description: Unauthorized
      "403":
        description: You are not a moderator or this is not your meetup
      "404":
        description: No meetup with the specified id
      "500":
        description: Internal server error

/meetups/{id}/attend:
  post:
    summary: Attend meetup
    tags:
      - Meetups
    description: Attend a specific meetup by its ID
    parameters:
      - in: path
        name: id
        required: true
        description: ID of the meetup to attend
        schema:
          type: integer
          format: int64
          minimum: 1
    responses:
      "200":
        description: Successfully attended meetup
      "400":
        description: Invalid meetup ID
      "401":
        description: Unauthorized
      "404":
        description: Meetup not found
      "500":
        description: Internal server error

/meetups/{id}/leave:
  post:
    summary: Leave meetup
    tags:
      - Meetups
    description: Leave a specific meetup by its ID
    parameters:
      - in: path
        name: id
        required: true
        description: ID of the meetup to leave
        schema:
          type: integer
          format: int64
          minimum: 1
    responses:
      "200":
        description: Successfully attended meetup
      "400":
        description: Invalid meetup ID
      "401":
        description: Unauthorized
      "404":
        description: Meetup not found
      "500":
        description: Internal server error

/auth/signup:
  post:
    summary: User Registration
    tags:
      - Auth
    descrition: Registers a new user with the provided email, role, and password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - role
              - password
            properties:
              email:
                type: string
                format: email
              role:
                type: string
                enum: [user, moderator]
              password:
                type: string
                minLength: 6
                maxLength: 20
    responses:
      "201":
        description: User successfully registered
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: User was added
      "400":
        description: Invalid email or password
      "500":
        description: Internal server error

/auth/signin:
  post:
    summary: User Sign-in
    tags:
      - Auth
    description: Signs in a user with the provided email and password, and returns access and refresh tokens in cookies
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                minLength: 6
                maxLength: 20
            required:
              - email
              - password
    responses:
      "200":
        description: Success signin
      "401":
        description: Invalid email or password
      "500":
        description: Internal server error

/auth/refreshtoken:
  get:
    summary: Refresh access token
    tags:
      - Auth
    description: Refreshes the access token using a refresh token in cookies
    responses:
      "200":
        description: Access token refreshed successfully
      "401":
        description: Unauthorized, invalid refresh token or expired
      "500":
        description: Internal server error

/user/info:
  get:
    summary: Take user information
    tags:
      - User
    description: Retrieve information about a user
    responses:
      "200":
        description: User information retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum: [user, moderator]
                attendees:
                  type: array
                  items:
                    $ref: "#/components/schemas/Meetup"
                createdMeetups:
                  type: array
                  items:
                    $ref: "#/components/schemas/Meetup"
                logo_url:
                  type: string
      "401":
        description: Unauthorized
      "500":
        description: Internal server error

/user/uploadlogo:
  post:
    summary: Upload user logo
    tags:
      - User
    description: Uploads a user logo
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              picture:
                type: string
                format: binary
    responses:
      "200":
        description: User logo was uploaded
      "400":
        description: Problem with upload logo
      "401":
        description: Unauthorized
      "500":
        description: Internal server error

/user/deletelogo:
  delete:
    summary: Delete user logo
    tags:
      - User
    description: Deletes a user logo
    responses:
      "200":
        description: User logo was deleted
      "400":
        description: Problem with delete logo
      "401":
        description: Unauthorized
      "500":
        description: Internal server error
